use Mix.Config

# Configure your database
config :estacionamento_ifro, EstacionamentoIFRO.Repo,
  # url:
  # "postgres://uvxnxivmdcevpu:d31a0d5a27c9cd96ec77259a812d048ea5b61d07048ec4fef90daa08270c1818@ec2-52-206-15-227.compute-1.amazonaws.com:5432/d8cu6isla3lhqj?sslmode=require",
  username: "uvxnxivmdcevpu",
  password: "d31a0d5a27c9cd96ec77259a812d048ea5b61d07048ec4fef90daa08270c1818",
  database: "d8cu6isla3lhqj",
  hostname: "ec2-52-206-15-227.compute-1.amazonaws.com",
  port: 5432,
  ssl: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :estacionamento_ifro, EstacionamentoIFROWeb.Endpoint,
  http: [port: 4000],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
